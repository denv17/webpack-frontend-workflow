// Width and height

@each $prop, $abbrev in (width: w, height: h) {
  @each $size, $length in $sizes {
    .#{$abbrev}-#{$size} {
      #{$prop}: $length !important;
    }
  }
}

.mw-100 {
  max-width: 100% !important;
}

.mh-100 {
  max-height: 100% !important;
}

// Viewport additional helpers
.min-vw-100 {
  min-width: 100vw !important;
}

.min-vh-100 {
  min-height: 100vh !important;
}

.vw-100 {
  width: 100vw !important;
}

.vh-100 {
  height: 100vh !important;
}

// Heights in px
@each $value in $medidas {
  .height-#{$value} {
    height: #{$value * 1px};
  }

  .width-#{$value} {
    width: #{$value * 1px};
  }

  .max-height-#{$value} {
    max-height: #{$value * 1px};
  }

  .min-height-#{$value} {
    min-height: #{$value * 1px};
  }

  .max-width-#{$value} {
    max-width: #{$value * 1px};
  }

  .min-width-#{$value} {
    min-width: #{$value * 1px};
  }
}

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .height#{$infix}-reset {
      height: auto !important;
    }

    .width#{$infix}-reset {
      width: auto !important;
    }

    .max-height#{$infix}-reset {
      max-height: inherit !important;
    }

    .min-height#{$infix}-reset {
      min-height: inherit !important;
    }

    .max-width#{$infix}-reset {
      max-width: inherit !important;
    }

    .min-width#{$infix}-reset {
      min-width: inherit !important;
    }
  }
}
